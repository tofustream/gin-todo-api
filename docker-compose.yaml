services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gin-todo-dev
    ports:
      - "8080:8080" # APIポート
    volumes:
      - .:/app # ホストとコンテナの同期
    environment:
      - DATABASE_URL=postgres://user:password@db:5432/tododb?sslmode=disable
    depends_on:
      - db

  db:
    image: postgres:17.2-alpine3.21
    container_name: postgres-dev
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tododb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com # 任意のメールアドレス
      PGADMIN_DEFAULT_PASSWORD: password # 任意のパスワード
    ports:
      - "5050:80" # ホストのポート5050をpgAdminのポート80にマッピング
    depends_on:
      - db

  cron:
    image: postgres:17.2-alpine3.21
    container_name: cron-tasks
    depends_on:
      - db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tododb
    volumes:
      - ./cmd/internal/db/maintenance:/maintenance # SQLファイルの配置場所をマウント
    entrypoint: >
      sh -c "
        apk add --no-cache bash &&
        echo '0 0 * * * psql -U $POSTGRES_USER -d $POSTGRES_DB -h db -f /maintenance/delete_old_deleted_accounts.sql' | crontab - &&
        crond -f"

volumes:
  postgres_data: # ボリュームを明示的に定義
